package deemoKotlin

/**
 * 코틀린은 프로젝트 - 모듈 - 폴더/파일의 구조로 되어있다. (물리적)
 * 논리적인 구조로는 package 가 있다.
 *
 * package 는 파일 상단에 package 키워드로 지정해줄 수 있으며,
 * 일반적으로 어플리케이션을 개발한 회사의 도메인이
 * youtube.com 이라고 한다면
 * com.youtube.{프로젝트 명}.{세부 정보} 와 같은 식으로 지정한다.
 *
 * 만약 package를 지정하지 않는다면 default 패키지로 묶이게 된다.
 * 코틀린은 자바와 다르게 폴더 구조와 패키지명을 일치시키지 않아도 된다. (package 키워드로 컴파일러가 알아서 처리해줌)
 *
 * 같은 패키지 내에서는 변수, 함수, 클래스를 공유할 수 있다. (이름만 쓰면 서로 쓸 수 있음)
 * 패키지가 다르면 그냥 쓸 수 없음 (그냥 이름 모르는 아저씨)
 *
 * 따라서 import 라는 작업이 필요하다.
 * import [사용할 외부 패키지] 이런식으로 쓰면 된다
 *
 * 코틀린은 클래스명과 파일명이 일치하지 않아도 되며,
 * 하나의 파일에 여러 개의 클래스를 넣어도 알아서 컴파일이 가능하다
 * 이는 파일을 파일 내의 package 기준으로 구분하기 때문이다.
 */

/**
 * 접근 제한자
 * - public
 *      패키지 스코프에서는 어떠한 패키지에서도 접근이 가능, 클래스 스코프에서는 어떠한 클래스에서도 접근이 가능
 * - internal
 *      같은 모듈 내에서만 접근이 가능, 클래스 스코프에서는 사용 x
 * - private
 *      같은 파일 내에서만 접근이 가능, 클래스 내부에서만 접근이 가능
 * - protected
 *      패키지 스코프에서는 사용 x, 클래스 자신과 상속받은 클래스에서만 접근이 가능
 */